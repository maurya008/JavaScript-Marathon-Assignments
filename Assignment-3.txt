1) List all the Escape Sequences characters in javascript.

=> 	Code	Result
	\b	Backspace
	\f	Form Feed
	\n	New Line
	\r	Carriage Return
	\t	Horizontal Tabulator
	\v	Vertical Tabulator
	\'	Single quote
	\"	Double quote
	\\	Backslash

2) Explain with example length and substring methods in javascript.

=> 	The length property sets or returns the number of elements in an array.

	const fruits = ["Banana", "Orange", "Apple", "Mango"];
	let length = fruits.length;

	The substr() method extracts a part of a string.
	The substr() method begins at a specified position, and returns a specified number of characters.
	The substr() method does not change the original string.
	To extract characters from the end of the string, use a negative start position.

	let text = "Hello world!";
	let result = text.substr(1, 4);"

3) What are padStart and padEnd in javascript, explain with an example.

=> The padStart() method pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length. The padding is applied from the start of the current string.
	const str1 = '5';

	console.log(str1.padStart(2, '0'));
	// expected output: "05"

	const fullNumber = '2034399002125581';
	const last4Digits = fullNumber.slice(-4);
	const maskedNumber = last4Digits.padStart(fullNumber.length, '*');

	console.log(maskedNumber);
	// expected output: "************5581"

The padEnd() method pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length. The padding is applied from the end of the current string.

	const str1 = 'Breaded Mushrooms';

	console.log(str1.padEnd(25, '.'));
	// expected output: "Breaded Mushrooms........"

	const str2 = '200';

	console.log(str2.padEnd(5));
	// expected output: "200  "

4) Define Global Object in javascript along with the global scope.

=> A global object is an object that always exists in the global scope.

In JavaScript, there's always a global object defined. In a web browser, when scripts create global variables defined with the var keyword, they're created as members of the global object. (In Node.js this is not the case.) The global object's interface depends on the execution context in which the script is running. For example:

In a web browser, any code which the script doesn't specifically start up as a background task has a Window as its global object. This is the vast majority of JavaScript code on the Web.
Code running in a Worker has a WorkerGlobalScope object as its global object.
Scripts running under Node.js have an object called global as their global object.
Note: Unlike var, the statements let and const do not create properties of the global object.

5) List all the names of Javascript engines present currently. 

=> Browser	Name of Javascript Engine
	Google Chrome	V8
	Edge (Internet Explorer)	Chakra
	Mozilla Firefox	Spider Monkey
	Safari 	Javascript Core Webkit